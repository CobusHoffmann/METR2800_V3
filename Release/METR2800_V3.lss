
METR2800_V3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000698  0000072c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000698  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800102  00800102  0000072e  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000740  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000023a  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000003c  00000000  00000000  000009da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000117  00000000  00000000  00000a16  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 00 02 	jmp	0x400	; 0x400 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 a2 00 	jmp	0x144	; 0x144 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e9       	ldi	r30, 0x98	; 152
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a7 31       	cpi	r26, 0x17	; 23
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <main>
  9e:	0c 94 4a 03 	jmp	0x694	; 0x694 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <initUART>:
  a6:	90 93 c5 00 	sts	0x00C5, r25
  aa:	80 93 c4 00 	sts	0x00C4, r24
  ae:	88 e1       	ldi	r24, 0x18	; 24
  b0:	80 93 c1 00 	sts	0x00C1, r24
  b4:	86 e0       	ldi	r24, 0x06	; 6
  b6:	80 93 c2 00 	sts	0x00C2, r24
  ba:	08 95       	ret

000000bc <transmitUART>:
  bc:	90 91 c0 00 	lds	r25, 0x00C0
  c0:	95 ff       	sbrs	r25, 5
  c2:	fc cf       	rjmp	.-8      	; 0xbc <transmitUART>
  c4:	80 93 c6 00 	sts	0x00C6, r24
  c8:	08 95       	ret

000000ca <printStr>:
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
  ce:	ec 01       	movw	r28, r24
  d0:	88 81       	ld	r24, Y
  d2:	88 23       	and	r24, r24
  d4:	49 f0       	breq	.+18     	; 0xe8 <printStr+0x1e>
  d6:	0e 94 5e 00 	call	0xbc	; 0xbc <transmitUART>
  da:	89 81       	ldd	r24, Y+1	; 0x01
  dc:	88 23       	and	r24, r24
  de:	21 f0       	breq	.+8      	; 0xe8 <printStr+0x1e>
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <transmitUART>
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <setChannel>:
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	1f 92       	push	r1
  f4:	cd b7       	in	r28, 0x3d	; 61
  f6:	de b7       	in	r29, 0x3e	; 62
  f8:	89 83       	std	Y+1, r24	; 0x01
  fa:	0f 90       	pop	r0
  fc:	df 91       	pop	r29
  fe:	cf 91       	pop	r28
 100:	08 95       	ret

00000102 <turnOnEM>:
 102:	41 9a       	sbi	0x08, 1	; 8
 104:	08 95       	ret

00000106 <turnOffEM>:
 106:	41 98       	cbi	0x08, 1	; 8
 108:	08 95       	ret

0000010a <turnOnIR>:
 10a:	42 9a       	sbi	0x08, 2	; 8
 10c:	08 95       	ret

0000010e <turnOffIR>:
 10e:	42 98       	cbi	0x08, 2	; 8
 110:	08 95       	ret

00000112 <initADC>:
 112:	80 e4       	ldi	r24, 0x40	; 64
 114:	80 93 7c 00 	sts	0x007C, r24
 118:	8f e8       	ldi	r24, 0x8F	; 143
 11a:	80 93 7a 00 	sts	0x007A, r24
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	80 93 7e 00 	sts	0x007E, r24
 124:	08 95       	ret

00000126 <initEF>:
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	87 b9       	out	0x07, r24	; 7
 12a:	0c 94 89 00 	jmp	0x112	; 0x112 <initADC>

0000012e <analogRead>:
 12e:	80 91 00 01 	lds	r24, 0x0100
 132:	90 91 01 01 	lds	r25, 0x0101
 136:	08 95       	ret

00000138 <startADC0>:
 138:	ea e7       	ldi	r30, 0x7A	; 122
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	80 64       	ori	r24, 0x40	; 64
 140:	80 83       	st	Z, r24
 142:	08 95       	ret

00000144 <__vector_21>:
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	8f 93       	push	r24
 150:	9f 93       	push	r25
 152:	80 91 78 00 	lds	r24, 0x0078
 156:	90 91 79 00 	lds	r25, 0x0079
 15a:	90 93 01 01 	sts	0x0101, r25
 15e:	80 93 00 01 	sts	0x0100, r24
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <addMotorToList>:
 170:	0f 93       	push	r16
 172:	1f 93       	push	r17
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	29 97       	sbiw	r28, 0x09	; 9
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	f8 94       	cli
 182:	de bf       	out	0x3e, r29	; 62
 184:	0f be       	out	0x3f, r0	; 63
 186:	cd bf       	out	0x3d, r28	; 61
 188:	09 83       	std	Y+1, r16	; 0x01
 18a:	1a 83       	std	Y+2, r17	; 0x02
 18c:	2b 83       	std	Y+3, r18	; 0x03
 18e:	3c 83       	std	Y+4, r19	; 0x04
 190:	4d 83       	std	Y+5, r20	; 0x05
 192:	5e 83       	std	Y+6, r21	; 0x06
 194:	6f 83       	std	Y+7, r22	; 0x07
 196:	78 87       	std	Y+8, r23	; 0x08
 198:	89 87       	std	Y+9, r24	; 0x09
 19a:	80 91 03 01 	lds	r24, 0x0103
 19e:	90 91 04 01 	lds	r25, 0x0104
 1a2:	29 e0       	ldi	r18, 0x09	; 9
 1a4:	28 9f       	mul	r18, r24
 1a6:	d0 01       	movw	r26, r0
 1a8:	29 9f       	mul	r18, r25
 1aa:	b0 0d       	add	r27, r0
 1ac:	11 24       	eor	r1, r1
 1ae:	ab 5f       	subi	r26, 0xFB	; 251
 1b0:	be 4f       	sbci	r27, 0xFE	; 254
 1b2:	fe 01       	movw	r30, r28
 1b4:	31 96       	adiw	r30, 0x01	; 1
 1b6:	01 90       	ld	r0, Z+
 1b8:	0d 92       	st	X+, r0
 1ba:	2a 95       	dec	r18
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <addMotorToList+0x46>
 1be:	01 96       	adiw	r24, 0x01	; 1
 1c0:	90 93 04 01 	sts	0x0104, r25
 1c4:	80 93 03 01 	sts	0x0103, r24
 1c8:	29 96       	adiw	r28, 0x09	; 9
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	f8 94       	cli
 1ce:	de bf       	out	0x3e, r29	; 62
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	cd bf       	out	0x3d, r28	; 61
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	1f 91       	pop	r17
 1da:	0f 91       	pop	r16
 1dc:	08 95       	ret

000001de <initMotor>:
 1de:	8f 92       	push	r8
 1e0:	9f 92       	push	r9
 1e2:	af 92       	push	r10
 1e4:	bf 92       	push	r11
 1e6:	cf 92       	push	r12
 1e8:	df 92       	push	r13
 1ea:	ef 92       	push	r14
 1ec:	ff 92       	push	r15
 1ee:	0f 93       	push	r16
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	cd b7       	in	r28, 0x3d	; 61
 1f8:	de b7       	in	r29, 0x3e	; 62
 1fa:	29 97       	sbiw	r28, 0x09	; 9
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
 206:	1a 83       	std	Y+2, r17	; 0x02
 208:	2b 83       	std	Y+3, r18	; 0x03
 20a:	5e 83       	std	Y+6, r21	; 0x06
 20c:	6f 83       	std	Y+7, r22	; 0x07
 20e:	78 87       	std	Y+8, r23	; 0x08
 210:	89 87       	std	Y+9, r24	; 0x09
 212:	f7 01       	movw	r30, r14
 214:	00 91 03 01 	lds	r16, 0x0103
 218:	09 83       	std	Y+1, r16	; 0x01
 21a:	dd 82       	std	Y+5, r13	; 0x05
 21c:	cc 82       	std	Y+4, r12	; 0x04
 21e:	80 81       	ld	r24, Z
 220:	8f ef       	ldi	r24, 0xFF	; 255
 222:	80 83       	st	Z, r24
 224:	5a 2d       	mov	r21, r10
 226:	ae 82       	std	Y+6, r10	; 0x06
 228:	bf 82       	std	Y+7, r11	; 0x07
 22a:	78 2d       	mov	r23, r8
 22c:	88 86       	std	Y+8, r8	; 0x08
 22e:	99 86       	std	Y+9, r9	; 0x09
 230:	1e 2d       	mov	r17, r14
 232:	fb 82       	std	Y+3, r15	; 0x03
 234:	ea 82       	std	Y+2, r14	; 0x02
 236:	2b 81       	ldd	r18, Y+3	; 0x03
 238:	3c 81       	ldd	r19, Y+4	; 0x04
 23a:	4d 81       	ldd	r20, Y+5	; 0x05
 23c:	6b 2d       	mov	r22, r11
 23e:	89 2d       	mov	r24, r9
 240:	0e 94 b8 00 	call	0x170	; 0x170 <addMotorToList>
 244:	29 96       	adiw	r28, 0x09	; 9
 246:	0f b6       	in	r0, 0x3f	; 63
 248:	f8 94       	cli
 24a:	de bf       	out	0x3e, r29	; 62
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	cd bf       	out	0x3d, r28	; 61
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	ff 90       	pop	r15
 25a:	ef 90       	pop	r14
 25c:	df 90       	pop	r13
 25e:	cf 90       	pop	r12
 260:	bf 90       	pop	r11
 262:	af 90       	pop	r10
 264:	9f 90       	pop	r9
 266:	8f 90       	pop	r8
 268:	08 95       	ret

0000026a <initTimer0>:
 26a:	84 b5       	in	r24, 0x24	; 36
 26c:	82 60       	ori	r24, 0x02	; 2
 26e:	84 bd       	out	0x24, r24	; 36
 270:	84 e1       	ldi	r24, 0x14	; 20
 272:	87 bd       	out	0x27, r24	; 39
 274:	ee e6       	ldi	r30, 0x6E	; 110
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	82 60       	ori	r24, 0x02	; 2
 27c:	80 83       	st	Z, r24
 27e:	85 b5       	in	r24, 0x25	; 37
 280:	85 60       	ori	r24, 0x05	; 5
 282:	85 bd       	out	0x25, r24	; 37
 284:	08 95       	ret

00000286 <setNumMotors>:
 286:	90 93 04 01 	sts	0x0104, r25
 28a:	80 93 03 01 	sts	0x0103, r24
 28e:	08 95       	ret

00000290 <getState>:
 290:	0f 93       	push	r16
 292:	1f 93       	push	r17
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	29 97       	sbiw	r28, 0x09	; 9
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	09 83       	std	Y+1, r16	; 0x01
 2aa:	1a 83       	std	Y+2, r17	; 0x02
 2ac:	2b 83       	std	Y+3, r18	; 0x03
 2ae:	3c 83       	std	Y+4, r19	; 0x04
 2b0:	4d 83       	std	Y+5, r20	; 0x05
 2b2:	5e 83       	std	Y+6, r21	; 0x06
 2b4:	6f 83       	std	Y+7, r22	; 0x07
 2b6:	78 87       	std	Y+8, r23	; 0x08
 2b8:	89 87       	std	Y+9, r24	; 0x09
 2ba:	e8 85       	ldd	r30, Y+8	; 0x08
 2bc:	f9 85       	ldd	r31, Y+9	; 0x09
 2be:	80 81       	ld	r24, Z
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	29 96       	adiw	r28, 0x09	; 9
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	f8 94       	cli
 2c8:	de bf       	out	0x3e, r29	; 62
 2ca:	0f be       	out	0x3f, r0	; 63
 2cc:	cd bf       	out	0x3d, r28	; 61
 2ce:	df 91       	pop	r29
 2d0:	cf 91       	pop	r28
 2d2:	1f 91       	pop	r17
 2d4:	0f 91       	pop	r16
 2d6:	08 95       	ret

000002d8 <getDir>:
 2d8:	0f 93       	push	r16
 2da:	1f 93       	push	r17
 2dc:	cf 93       	push	r28
 2de:	df 93       	push	r29
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
 2e4:	29 97       	sbiw	r28, 0x09	; 9
 2e6:	0f b6       	in	r0, 0x3f	; 63
 2e8:	f8 94       	cli
 2ea:	de bf       	out	0x3e, r29	; 62
 2ec:	0f be       	out	0x3f, r0	; 63
 2ee:	cd bf       	out	0x3d, r28	; 61
 2f0:	09 83       	std	Y+1, r16	; 0x01
 2f2:	1a 83       	std	Y+2, r17	; 0x02
 2f4:	2b 83       	std	Y+3, r18	; 0x03
 2f6:	3c 83       	std	Y+4, r19	; 0x04
 2f8:	4d 83       	std	Y+5, r20	; 0x05
 2fa:	5e 83       	std	Y+6, r21	; 0x06
 2fc:	6f 83       	std	Y+7, r22	; 0x07
 2fe:	78 87       	std	Y+8, r23	; 0x08
 300:	89 87       	std	Y+9, r24	; 0x09
 302:	ee 81       	ldd	r30, Y+6	; 0x06
 304:	ff 81       	ldd	r31, Y+7	; 0x07
 306:	80 81       	ld	r24, Z
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	29 96       	adiw	r28, 0x09	; 9
 30c:	0f b6       	in	r0, 0x3f	; 63
 30e:	f8 94       	cli
 310:	de bf       	out	0x3e, r29	; 62
 312:	0f be       	out	0x3f, r0	; 63
 314:	cd bf       	out	0x3d, r28	; 61
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	1f 91       	pop	r17
 31c:	0f 91       	pop	r16
 31e:	08 95       	ret

00000320 <getMotorAtIndex>:
 320:	29 e0       	ldi	r18, 0x09	; 9
 322:	26 9f       	mul	r18, r22
 324:	f0 01       	movw	r30, r0
 326:	27 9f       	mul	r18, r23
 328:	f0 0d       	add	r31, r0
 32a:	11 24       	eor	r1, r1
 32c:	eb 5f       	subi	r30, 0xFB	; 251
 32e:	fe 4f       	sbci	r31, 0xFE	; 254
 330:	dc 01       	movw	r26, r24
 332:	01 90       	ld	r0, Z+
 334:	0d 92       	st	X+, r0
 336:	2a 95       	dec	r18
 338:	e1 f7       	brne	.-8      	; 0x332 <getMotorAtIndex+0x12>
 33a:	08 95       	ret

0000033c <forward>:
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	cd b7       	in	r28, 0x3d	; 61
 346:	de b7       	in	r29, 0x3e	; 62
 348:	62 97       	sbiw	r28, 0x12	; 18
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	de bf       	out	0x3e, r29	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	cd bf       	out	0x3d, r28	; 61
 354:	60 2f       	mov	r22, r16
 356:	70 e0       	ldi	r23, 0x00	; 0
 358:	ce 01       	movw	r24, r28
 35a:	01 96       	adiw	r24, 0x01	; 1
 35c:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 360:	ee 81       	ldd	r30, Y+6	; 0x06
 362:	ff 81       	ldd	r31, Y+7	; 0x07
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	80 83       	st	Z, r24
 368:	62 96       	adiw	r28, 0x12	; 18
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	f8 94       	cli
 36e:	de bf       	out	0x3e, r29	; 62
 370:	0f be       	out	0x3f, r0	; 63
 372:	cd bf       	out	0x3d, r28	; 61
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	1f 91       	pop	r17
 37a:	0f 91       	pop	r16
 37c:	08 95       	ret

0000037e <backward>:
 37e:	0f 93       	push	r16
 380:	1f 93       	push	r17
 382:	cf 93       	push	r28
 384:	df 93       	push	r29
 386:	cd b7       	in	r28, 0x3d	; 61
 388:	de b7       	in	r29, 0x3e	; 62
 38a:	62 97       	sbiw	r28, 0x12	; 18
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	f8 94       	cli
 390:	de bf       	out	0x3e, r29	; 62
 392:	0f be       	out	0x3f, r0	; 63
 394:	cd bf       	out	0x3d, r28	; 61
 396:	60 2f       	mov	r22, r16
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	ce 01       	movw	r24, r28
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 3a2:	ee 81       	ldd	r30, Y+6	; 0x06
 3a4:	ff 81       	ldd	r31, Y+7	; 0x07
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	80 83       	st	Z, r24
 3aa:	62 96       	adiw	r28, 0x12	; 18
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	f8 94       	cli
 3b0:	de bf       	out	0x3e, r29	; 62
 3b2:	0f be       	out	0x3f, r0	; 63
 3b4:	cd bf       	out	0x3d, r28	; 61
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	1f 91       	pop	r17
 3bc:	0f 91       	pop	r16
 3be:	08 95       	ret

000003c0 <stop>:
 3c0:	0f 93       	push	r16
 3c2:	1f 93       	push	r17
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	cd b7       	in	r28, 0x3d	; 61
 3ca:	de b7       	in	r29, 0x3e	; 62
 3cc:	62 97       	sbiw	r28, 0x12	; 18
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	f8 94       	cli
 3d2:	de bf       	out	0x3e, r29	; 62
 3d4:	0f be       	out	0x3f, r0	; 63
 3d6:	cd bf       	out	0x3d, r28	; 61
 3d8:	60 2f       	mov	r22, r16
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	ce 01       	movw	r24, r28
 3de:	01 96       	adiw	r24, 0x01	; 1
 3e0:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 3e4:	ee 81       	ldd	r30, Y+6	; 0x06
 3e6:	ff 81       	ldd	r31, Y+7	; 0x07
 3e8:	10 82       	st	Z, r1
 3ea:	62 96       	adiw	r28, 0x12	; 18
 3ec:	0f b6       	in	r0, 0x3f	; 63
 3ee:	f8 94       	cli
 3f0:	de bf       	out	0x3e, r29	; 62
 3f2:	0f be       	out	0x3f, r0	; 63
 3f4:	cd bf       	out	0x3d, r28	; 61
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	1f 91       	pop	r17
 3fc:	0f 91       	pop	r16
 3fe:	08 95       	ret

00000400 <__vector_14>:
 400:	1f 92       	push	r1
 402:	0f 92       	push	r0
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	0f 92       	push	r0
 408:	11 24       	eor	r1, r1
 40a:	ff 92       	push	r15
 40c:	0f 93       	push	r16
 40e:	1f 93       	push	r17
 410:	2f 93       	push	r18
 412:	3f 93       	push	r19
 414:	4f 93       	push	r20
 416:	5f 93       	push	r21
 418:	6f 93       	push	r22
 41a:	7f 93       	push	r23
 41c:	8f 93       	push	r24
 41e:	9f 93       	push	r25
 420:	af 93       	push	r26
 422:	bf 93       	push	r27
 424:	ef 93       	push	r30
 426:	ff 93       	push	r31
 428:	cf 93       	push	r28
 42a:	df 93       	push	r29
 42c:	cd b7       	in	r28, 0x3d	; 61
 42e:	de b7       	in	r29, 0x3e	; 62
 430:	cc 56       	subi	r28, 0x6C	; 108
 432:	d1 09       	sbc	r29, r1
 434:	de bf       	out	0x3e, r29	; 62
 436:	cd bf       	out	0x3d, r28	; 61
 438:	f8 94       	cli
 43a:	00 e0       	ldi	r16, 0x00	; 0
 43c:	10 e0       	ldi	r17, 0x00	; 0
 43e:	80 91 03 01 	lds	r24, 0x0103
 442:	90 91 04 01 	lds	r25, 0x0104
 446:	08 17       	cp	r16, r24
 448:	19 07       	cpc	r17, r25
 44a:	0c f0       	brlt	.+2      	; 0x44e <__vector_14+0x4e>
 44c:	8e c0       	rjmp	.+284    	; 0x56a <__vector_14+0x16a>
 44e:	b8 01       	movw	r22, r16
 450:	ce 01       	movw	r24, r28
 452:	8c 59       	subi	r24, 0x9C	; 156
 454:	9f 4f       	sbci	r25, 0xFF	; 255
 456:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 45a:	ab 96       	adiw	r28, 0x2b	; 43
 45c:	ee ad       	ldd	r30, Y+62	; 0x3e
 45e:	ff ad       	ldd	r31, Y+63	; 0x3f
 460:	ab 97       	sbiw	r28, 0x2b	; 43
 462:	f0 80       	ld	r15, Z
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	f8 16       	cp	r15, r24
 468:	21 f0       	breq	.+8      	; 0x472 <__vector_14+0x72>
 46a:	82 e0       	ldi	r24, 0x02	; 2
 46c:	f8 16       	cp	r15, r24
 46e:	31 f1       	breq	.+76     	; 0x4bc <__vector_14+0xbc>
 470:	44 c0       	rjmp	.+136    	; 0x4fa <__vector_14+0xfa>
 472:	b8 01       	movw	r22, r16
 474:	ce 01       	movw	r24, r28
 476:	85 5a       	subi	r24, 0xA5	; 165
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 47e:	a4 96       	adiw	r28, 0x24	; 36
 480:	ee ad       	ldd	r30, Y+62	; 0x3e
 482:	ff ad       	ldd	r31, Y+63	; 0x3f
 484:	a4 97       	sbiw	r28, 0x24	; 36
 486:	80 81       	ld	r24, Z
 488:	b8 01       	movw	r22, r16
 48a:	84 30       	cpi	r24, 0x04	; 4
 48c:	60 f4       	brcc	.+24     	; 0x4a6 <__vector_14+0xa6>
 48e:	ce 01       	movw	r24, r28
 490:	8e 5a       	subi	r24, 0xAE	; 174
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 498:	6b 96       	adiw	r28, 0x1b	; 27
 49a:	ee ad       	ldd	r30, Y+62	; 0x3e
 49c:	ff ad       	ldd	r31, Y+63	; 0x3f
 49e:	6b 97       	sbiw	r28, 0x1b	; 27
 4a0:	80 81       	ld	r24, Z
 4a2:	8f 5f       	subi	r24, 0xFF	; 255
 4a4:	29 c0       	rjmp	.+82     	; 0x4f8 <__vector_14+0xf8>
 4a6:	ce 01       	movw	r24, r28
 4a8:	87 5b       	subi	r24, 0xB7	; 183
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 4b0:	62 96       	adiw	r28, 0x12	; 18
 4b2:	ee ad       	ldd	r30, Y+62	; 0x3e
 4b4:	ff ad       	ldd	r31, Y+63	; 0x3f
 4b6:	62 97       	sbiw	r28, 0x12	; 18
 4b8:	f0 82       	st	Z, r15
 4ba:	1f c0       	rjmp	.+62     	; 0x4fa <__vector_14+0xfa>
 4bc:	b8 01       	movw	r22, r16
 4be:	ce 01       	movw	r24, r28
 4c0:	80 5c       	subi	r24, 0xC0	; 192
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 4c8:	29 96       	adiw	r28, 0x09	; 9
 4ca:	ee ad       	ldd	r30, Y+62	; 0x3e
 4cc:	ff ad       	ldd	r31, Y+63	; 0x3f
 4ce:	29 97       	sbiw	r28, 0x09	; 9
 4d0:	80 81       	ld	r24, Z
 4d2:	b8 01       	movw	r22, r16
 4d4:	82 30       	cpi	r24, 0x02	; 2
 4d6:	48 f0       	brcs	.+18     	; 0x4ea <__vector_14+0xea>
 4d8:	ce 01       	movw	r24, r28
 4da:	c7 96       	adiw	r24, 0x37	; 55
 4dc:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 4e0:	ee ad       	ldd	r30, Y+62	; 0x3e
 4e2:	ff ad       	ldd	r31, Y+63	; 0x3f
 4e4:	80 81       	ld	r24, Z
 4e6:	81 50       	subi	r24, 0x01	; 1
 4e8:	07 c0       	rjmp	.+14     	; 0x4f8 <__vector_14+0xf8>
 4ea:	ce 01       	movw	r24, r28
 4ec:	8e 96       	adiw	r24, 0x2e	; 46
 4ee:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 4f2:	ed a9       	ldd	r30, Y+53	; 0x35
 4f4:	fe a9       	ldd	r31, Y+54	; 0x36
 4f6:	84 e0       	ldi	r24, 0x04	; 4
 4f8:	80 83       	st	Z, r24
 4fa:	b8 01       	movw	r22, r16
 4fc:	ce 01       	movw	r24, r28
 4fe:	85 96       	adiw	r24, 0x25	; 37
 500:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 504:	ec a5       	ldd	r30, Y+44	; 0x2c
 506:	fd a5       	ldd	r31, Y+45	; 0x2d
 508:	80 81       	ld	r24, Z
 50a:	82 30       	cpi	r24, 0x02	; 2
 50c:	c9 f0       	breq	.+50     	; 0x540 <__vector_14+0x140>
 50e:	58 f4       	brcc	.+22     	; 0x526 <__vector_14+0x126>
 510:	81 30       	cpi	r24, 0x01	; 1
 512:	41 f5       	brne	.+80     	; 0x564 <__vector_14+0x164>
 514:	b8 01       	movw	r22, r16
 516:	ce 01       	movw	r24, r28
 518:	4c 96       	adiw	r24, 0x1c	; 28
 51a:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 51e:	ef 8d       	ldd	r30, Y+31	; 0x1f
 520:	f8 a1       	ldd	r31, Y+32	; 0x20
 522:	85 e1       	ldi	r24, 0x15	; 21
 524:	1e c0       	rjmp	.+60     	; 0x562 <__vector_14+0x162>
 526:	83 30       	cpi	r24, 0x03	; 3
 528:	a1 f0       	breq	.+40     	; 0x552 <__vector_14+0x152>
 52a:	84 30       	cpi	r24, 0x04	; 4
 52c:	d9 f4       	brne	.+54     	; 0x564 <__vector_14+0x164>
 52e:	b8 01       	movw	r22, r16
 530:	ce 01       	movw	r24, r28
 532:	01 96       	adiw	r24, 0x01	; 1
 534:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 538:	ec 81       	ldd	r30, Y+4	; 0x04
 53a:	fd 81       	ldd	r31, Y+5	; 0x05
 53c:	83 e1       	ldi	r24, 0x13	; 19
 53e:	11 c0       	rjmp	.+34     	; 0x562 <__vector_14+0x162>
 540:	b8 01       	movw	r22, r16
 542:	ce 01       	movw	r24, r28
 544:	43 96       	adiw	r24, 0x13	; 19
 546:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 54a:	ee 89       	ldd	r30, Y+22	; 0x16
 54c:	ff 89       	ldd	r31, Y+23	; 0x17
 54e:	8d e0       	ldi	r24, 0x0D	; 13
 550:	08 c0       	rjmp	.+16     	; 0x562 <__vector_14+0x162>
 552:	b8 01       	movw	r22, r16
 554:	ce 01       	movw	r24, r28
 556:	0a 96       	adiw	r24, 0x0a	; 10
 558:	0e 94 90 01 	call	0x320	; 0x320 <getMotorAtIndex>
 55c:	ed 85       	ldd	r30, Y+13	; 0x0d
 55e:	fe 85       	ldd	r31, Y+14	; 0x0e
 560:	8b e0       	ldi	r24, 0x0B	; 11
 562:	80 83       	st	Z, r24
 564:	0f 5f       	subi	r16, 0xFF	; 255
 566:	1f 4f       	sbci	r17, 0xFF	; 255
 568:	6a cf       	rjmp	.-300    	; 0x43e <__vector_14+0x3e>
 56a:	78 94       	sei
 56c:	c4 59       	subi	r28, 0x94	; 148
 56e:	df 4f       	sbci	r29, 0xFF	; 255
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	f8 94       	cli
 574:	de bf       	out	0x3e, r29	; 62
 576:	0f be       	out	0x3f, r0	; 63
 578:	cd bf       	out	0x3d, r28	; 61
 57a:	df 91       	pop	r29
 57c:	cf 91       	pop	r28
 57e:	ff 91       	pop	r31
 580:	ef 91       	pop	r30
 582:	bf 91       	pop	r27
 584:	af 91       	pop	r26
 586:	9f 91       	pop	r25
 588:	8f 91       	pop	r24
 58a:	7f 91       	pop	r23
 58c:	6f 91       	pop	r22
 58e:	5f 91       	pop	r21
 590:	4f 91       	pop	r20
 592:	3f 91       	pop	r19
 594:	2f 91       	pop	r18
 596:	1f 91       	pop	r17
 598:	0f 91       	pop	r16
 59a:	ff 90       	pop	r15
 59c:	0f 90       	pop	r0
 59e:	0f be       	out	0x3f, r0	; 63
 5a0:	0f 90       	pop	r0
 5a2:	1f 90       	pop	r1
 5a4:	18 95       	reti

000005a6 <main>:
 5a6:	cf 93       	push	r28
 5a8:	df 93       	push	r29
 5aa:	cd b7       	in	r28, 0x3d	; 61
 5ac:	de b7       	in	r29, 0x3e	; 62
 5ae:	2b 97       	sbiw	r28, 0x0b	; 11
 5b0:	0f b6       	in	r0, 0x3f	; 63
 5b2:	f8 94       	cli
 5b4:	de bf       	out	0x3e, r29	; 62
 5b6:	0f be       	out	0x3f, r0	; 63
 5b8:	cd bf       	out	0x3d, r28	; 61
 5ba:	78 94       	sei
 5bc:	81 e0       	ldi	r24, 0x01	; 1
 5be:	8b 87       	std	Y+11, r24	; 0x0b
 5c0:	8a 87       	std	Y+10, r24	; 0x0a
 5c2:	ce 01       	movw	r24, r28
 5c4:	0a 96       	adiw	r24, 0x0a	; 10
 5c6:	4c 01       	movw	r8, r24
 5c8:	01 96       	adiw	r24, 0x01	; 1
 5ca:	5c 01       	movw	r10, r24
 5cc:	85 e2       	ldi	r24, 0x25	; 37
 5ce:	c8 2e       	mov	r12, r24
 5d0:	d1 2c       	mov	r13, r1
 5d2:	94 e2       	ldi	r25, 0x24	; 36
 5d4:	e9 2e       	mov	r14, r25
 5d6:	f1 2c       	mov	r15, r1
 5d8:	09 81       	ldd	r16, Y+1	; 0x01
 5da:	1a 81       	ldd	r17, Y+2	; 0x02
 5dc:	2b 81       	ldd	r18, Y+3	; 0x03
 5de:	3c 81       	ldd	r19, Y+4	; 0x04
 5e0:	4d 81       	ldd	r20, Y+5	; 0x05
 5e2:	5e 81       	ldd	r21, Y+6	; 0x06
 5e4:	6f 81       	ldd	r22, Y+7	; 0x07
 5e6:	78 85       	ldd	r23, Y+8	; 0x08
 5e8:	89 85       	ldd	r24, Y+9	; 0x09
 5ea:	0e 94 ef 00 	call	0x1de	; 0x1de <initMotor>
 5ee:	0e 94 35 01 	call	0x26a	; 0x26a <initTimer0>
 5f2:	9f ef       	ldi	r25, 0xFF	; 255
 5f4:	23 ed       	ldi	r18, 0xD3	; 211
 5f6:	80 e3       	ldi	r24, 0x30	; 48
 5f8:	91 50       	subi	r25, 0x01	; 1
 5fa:	20 40       	sbci	r18, 0x00	; 0
 5fc:	80 40       	sbci	r24, 0x00	; 0
 5fe:	e1 f7       	brne	.-8      	; 0x5f8 <main+0x52>
 600:	00 c0       	rjmp	.+0      	; 0x602 <main+0x5c>
 602:	00 00       	nop
 604:	09 81       	ldd	r16, Y+1	; 0x01
 606:	1a 81       	ldd	r17, Y+2	; 0x02
 608:	2b 81       	ldd	r18, Y+3	; 0x03
 60a:	3c 81       	ldd	r19, Y+4	; 0x04
 60c:	4d 81       	ldd	r20, Y+5	; 0x05
 60e:	5e 81       	ldd	r21, Y+6	; 0x06
 610:	6f 81       	ldd	r22, Y+7	; 0x07
 612:	78 85       	ldd	r23, Y+8	; 0x08
 614:	89 85       	ldd	r24, Y+9	; 0x09
 616:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <stop>
 61a:	9f ef       	ldi	r25, 0xFF	; 255
 61c:	23 ed       	ldi	r18, 0xD3	; 211
 61e:	80 e3       	ldi	r24, 0x30	; 48
 620:	91 50       	subi	r25, 0x01	; 1
 622:	20 40       	sbci	r18, 0x00	; 0
 624:	80 40       	sbci	r24, 0x00	; 0
 626:	e1 f7       	brne	.-8      	; 0x620 <main+0x7a>
 628:	00 c0       	rjmp	.+0      	; 0x62a <main+0x84>
 62a:	00 00       	nop
 62c:	09 81       	ldd	r16, Y+1	; 0x01
 62e:	1a 81       	ldd	r17, Y+2	; 0x02
 630:	2b 81       	ldd	r18, Y+3	; 0x03
 632:	3c 81       	ldd	r19, Y+4	; 0x04
 634:	4d 81       	ldd	r20, Y+5	; 0x05
 636:	5e 81       	ldd	r21, Y+6	; 0x06
 638:	6f 81       	ldd	r22, Y+7	; 0x07
 63a:	78 85       	ldd	r23, Y+8	; 0x08
 63c:	89 85       	ldd	r24, Y+9	; 0x09
 63e:	0e 94 bf 01 	call	0x37e	; 0x37e <backward>
 642:	9f ef       	ldi	r25, 0xFF	; 255
 644:	23 ed       	ldi	r18, 0xD3	; 211
 646:	80 e3       	ldi	r24, 0x30	; 48
 648:	91 50       	subi	r25, 0x01	; 1
 64a:	20 40       	sbci	r18, 0x00	; 0
 64c:	80 40       	sbci	r24, 0x00	; 0
 64e:	e1 f7       	brne	.-8      	; 0x648 <main+0xa2>
 650:	00 c0       	rjmp	.+0      	; 0x652 <main+0xac>
 652:	00 00       	nop
 654:	09 81       	ldd	r16, Y+1	; 0x01
 656:	1a 81       	ldd	r17, Y+2	; 0x02
 658:	2b 81       	ldd	r18, Y+3	; 0x03
 65a:	3c 81       	ldd	r19, Y+4	; 0x04
 65c:	4d 81       	ldd	r20, Y+5	; 0x05
 65e:	5e 81       	ldd	r21, Y+6	; 0x06
 660:	6f 81       	ldd	r22, Y+7	; 0x07
 662:	78 85       	ldd	r23, Y+8	; 0x08
 664:	89 85       	ldd	r24, Y+9	; 0x09
 666:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <stop>
 66a:	9f ef       	ldi	r25, 0xFF	; 255
 66c:	23 ed       	ldi	r18, 0xD3	; 211
 66e:	80 e3       	ldi	r24, 0x30	; 48
 670:	91 50       	subi	r25, 0x01	; 1
 672:	20 40       	sbci	r18, 0x00	; 0
 674:	80 40       	sbci	r24, 0x00	; 0
 676:	e1 f7       	brne	.-8      	; 0x670 <main+0xca>
 678:	00 c0       	rjmp	.+0      	; 0x67a <main+0xd4>
 67a:	00 00       	nop
 67c:	09 81       	ldd	r16, Y+1	; 0x01
 67e:	1a 81       	ldd	r17, Y+2	; 0x02
 680:	2b 81       	ldd	r18, Y+3	; 0x03
 682:	3c 81       	ldd	r19, Y+4	; 0x04
 684:	4d 81       	ldd	r20, Y+5	; 0x05
 686:	5e 81       	ldd	r21, Y+6	; 0x06
 688:	6f 81       	ldd	r22, Y+7	; 0x07
 68a:	78 85       	ldd	r23, Y+8	; 0x08
 68c:	89 85       	ldd	r24, Y+9	; 0x09
 68e:	0e 94 9e 01 	call	0x33c	; 0x33c <forward>
 692:	af cf       	rjmp	.-162    	; 0x5f2 <main+0x4c>

00000694 <_exit>:
 694:	f8 94       	cli

00000696 <__stop_program>:
 696:	ff cf       	rjmp	.-2      	; 0x696 <__stop_program>
