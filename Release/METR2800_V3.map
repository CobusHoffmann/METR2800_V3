Archive member included because of file (symbol)

/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                              /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o (exit)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                              ./end_effector.o (__do_copy_data)
/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                              ./end_effector.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

b                   0x2               ./pick_n_place.o
num_blocks          0x1               ./pick_n_place.o
stateb              0x1               ./motor.o
steps               0x2               ./motor.o
dirb                0x1               ./motor.o
statea              0x1               ./motor.o
bin                 0x1               ./pick_n_place.o
s                   0x32              ./pick_n_place.o
dira                0x1               ./motor.o
availableMotors     0x12              ./motor.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
LOAD ./UART.o
LOAD ./end_effector.o
LOAD ./motor.o
LOAD ./pick_n_place.o
START GROUP
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libm.a
LOAD /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x602
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_20
                0x000000a2                __vector_1
                0x000000a2                __vector_24
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_4
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_18
                0x000000a2                __vector_22
 .text          0x000000a6        0x0 ./UART.o
 .text          0x000000a6        0x0 ./end_effector.o
 .text          0x000000a6        0x0 ./motor.o
 .text          0x000000a6        0x0 ./pick_n_place.o
 .text          0x000000a6        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text          0x000000a6        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text          0x000000a6        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.initUART
                0x000000a6       0x16 ./UART.o
                0x000000a6                initUART
 .text.transmitUART
                0x000000bc        0xe ./UART.o
                0x000000bc                transmitUART
 .text.printStr
                0x000000ca       0x18 ./UART.o
                0x000000ca                printStr
 .text.setChannel
                0x000000e2       0x14 ./end_effector.o
                0x000000e2                setChannel
 .text.turnOnEM
                0x000000f6        0x4 ./end_effector.o
                0x000000f6                turnOnEM
 .text.turnOffEM
                0x000000fa        0x4 ./end_effector.o
                0x000000fa                turnOffEM
 .text.turnOnIR
                0x000000fe        0x4 ./end_effector.o
                0x000000fe                turnOnIR
 .text.turnOffIR
                0x00000102        0x4 ./end_effector.o
                0x00000102                turnOffIR
 .text.initADC  0x00000106       0x14 ./end_effector.o
                0x00000106                initADC
 .text.initEF   0x0000011a        0x8 ./end_effector.o
                0x0000011a                initEF
 .text.analogRead
                0x00000122        0xa ./end_effector.o
                0x00000122                analogRead
 .text.startADC0
                0x0000012c        0xc ./end_effector.o
                0x0000012c                startADC0
 .text.__vector_21
                0x00000138       0x2c ./end_effector.o
                0x00000138                __vector_21
 .text.initMotors
                0x00000164       0x14 ./motor.o
                0x00000164                initMotors
 .text.move_forwardA
                0x00000178        0x8 ./motor.o
                0x00000178                move_forwardA
 .text.move_backwardA
                0x00000180        0x8 ./motor.o
                0x00000180                move_backwardA
 .text.stopA    0x00000188        0x6 ./motor.o
                0x00000188                stopA
 .text.move_forwardB
                0x0000018e        0x8 ./motor.o
                0x0000018e                move_forwardB
 .text.move_backwardB
                0x00000196        0x8 ./motor.o
                0x00000196                move_backwardB
 .text.stopB    0x0000019e        0x6 ./motor.o
                0x0000019e                stopB
 .text.moveA    0x000001a4       0x2c ./motor.o
                0x000001a4                moveA
 .text.moveB    0x000001d0       0x2c ./motor.o
                0x000001d0                moveB
 .text.getSteps
                0x000001fc        0xa ./motor.o
                0x000001fc                getSteps
 .text.addMotorToList
                0x00000206       0x68 ./motor.o
                0x00000206                addMotorToList
 .text.initMotor
                0x0000026e       0x94 ./motor.o
                0x0000026e                initMotor
 .text.initTimer0
                0x00000302       0x1c ./motor.o
                0x00000302                initTimer0
 .text.setNumMotors
                0x0000031e        0x6 ./motor.o
                0x0000031e                setNumMotors
 .text.getState
                0x00000324       0x48 ./motor.o
                0x00000324                getState
 .text.getDir   0x0000036c       0x48 ./motor.o
                0x0000036c                getDir
 .text.getMotorAtIndex
                0x000003b4       0x1c ./motor.o
                0x000003b4                getMotorAtIndex
 .text.forward  0x000003d0       0x54 ./motor.o
                0x000003d0                forward
 .text.backward
                0x00000424       0x54 ./motor.o
                0x00000424                backward
 .text.stop     0x00000478       0x52 ./motor.o
                0x00000478                stop
 .text.__vector_14
                0x000004ca       0xb8 ./motor.o
                0x000004ca                __vector_14
 .text.startup.main
                0x00000582       0x7c ./pick_n_place.o
                0x00000582                main
 .text.libgcc.mul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
                0x000005fe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005fe        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
                0x000005fe                exit
                0x000005fe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005fe        0x4 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000602                _etext = .

.data           0x00800100        0x2 load address 0x00000602
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 ./UART.o
 .data          0x00800100        0x0 ./end_effector.o
 .data          0x00800100        0x0 ./motor.o
 .data          0x00800100        0x0 ./pick_n_place.o
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.analogVal
                0x00800100        0x2 ./end_effector.o
                0x00800100                analogVal
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800102                . = ALIGN (0x2)
                0x00800102                _edata = .
                0x00800102                PROVIDE (__data_end, .)

.bss            0x00800102       0x50
                0x00800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800102        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800102        0x0 ./UART.o
 .bss           0x00800102        0x0 ./end_effector.o
 .bss           0x00800102        0x0 ./motor.o
 .bss           0x00800102        0x0 ./pick_n_place.o
 .bss           0x00800102        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .bss           0x00800102        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800102        0x0 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.convertStatus
                0x00800102        0x1 ./end_effector.o
                0x00800102                convertStatus
 .bss.num_motors
                0x00800103        0x1 ./motor.o
                0x00800103                num_motors
 *(COMMON)
 COMMON         0x00800104       0x18 ./motor.o
                0x00800104                stateb
                0x00800105                steps
                0x00800107                dirb
                0x00800108                statea
                0x00800109                dira
                0x0080010a                availableMotors
 COMMON         0x0080011c       0x36 ./pick_n_place.o
                0x0080011c                b
                0x0080011e                num_blocks
                0x0080011f                bin
                0x00800120                s
                0x00800152                PROVIDE (__bss_end, .)
                0x00000602                __data_load_start = LOADADDR (.data)
                0x00000604                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800152        0x0
                0x00800152                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800152                PROVIDE (__noinit_end, .)
                0x00800152                _end = .
                0x00800152                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x11
 *(.comment)
 .comment       0x00000000       0x11 ./UART.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 ./end_effector.o
 .comment       0x00000000       0x12 ./motor.o
 .comment       0x00000000       0x12 ./pick_n_place.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_aranges
                0x00000020       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_aranges
                0x00000040       0x20 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0x23a
 *(.debug_info)
 .debug_info    0x00000000       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_info    0x000000be       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_info    0x0000017c       0xbe /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000       0x3c
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_abbrev  0x00000014       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_abbrev  0x00000028       0x14 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_line     0x00000000      0x117
 *(.debug_line)
 .debug_line    0x00000000       0x58 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_exit.o)
 .debug_line    0x00000058       0x61 /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_copy_data.o)
 .debug_line    0x000000b9       0x5e /usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/avr5/libgcc.a(_clear_bss.o)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(METR2800_V3.elf elf32-avr)
LOAD linker stubs
